version: '3.9'

services:
  # backend:
  #   container_name: hack-server
  #   environment:
  #     DATABASE_HOST: ${DATABASE_HOST}
  #     DATABASE_NAME: ${DATABASE_NAME}
  #     DATABASE_USER: ${DATABASE_USER}
  #     DATABASE_PASSWORD: ${DATABASE_PASSWORD}
  #     DATABASE_PORT: ${DATABASE_PORT}

  #     ELASTIC_HOST: ${ELASTIC_HOST}
  #     ELASTIC_PORT: ${ELASTIC_PORT}

  #     JWT_SECRET: ${JWT_SECRET}
  #     TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
  #   build:
  #     context: ./backend
  #     dockerfile: Dockerfile
  #   restart: always

  # proxy:
  #   depends_on:
  #     - backend
  #   container_name: hack-proxy
  #   build:
  #     context: ./frontend/
  #     dockerfile: Dockerfile
  #   environment:
  #     PUBLIC_URL: ${PUBLIC_URL}
  #   ports:
  #     - "80:80"
  #   restart: always
  
  # telegram-bot:
  #   build:
  #     context: ./bot
  #     dockerfile: Dockerfile
  #   container_name: hack-tg-bot
  #   environment:
  #     TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
  #     ADMINS_CHAT_IDS: ${ADMINS_CHAT_IDS}
  #   command: python3 main.py
  #   depends_on:
  #     - database
  #   restart: always

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    volumes:
      - ./backend:/app
    command: ["uvicorn", "src.main:app", "--host", "0.0.0.0", "--port", "5000"]
    environment:
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USER: ${DATABASE_USER}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      DATABASE_PORT: ${DATABASE_PORT}

      ELASTIC_HOST: ${ELASTIC_HOST}
      ELASTIC_PORT: ${ELASTIC_PORT}

      JWT_SECRET: ${JWT_SECRET}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
    depends_on:
      - database
    restart: always
    container_name: hack-server

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: hack-client
    volumes:
      - './:/app'
      - '/app/node_modules'
    stdin_open: true
    environment:
      CHOKIDAR_USEPOLLING: true
      PUBLIC_URL: ${PUBLIC_URL}
    command: npm start

  database:
    image: postgres:12.2-alpine
    restart: "no"
    container_name: hack-db
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - hack-postgres-db:/var/lib/postgresql

  database-admin:
    image: dpage/pgadmin4
    container_name: hack-db-admin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:81"

  database-es:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    container_name: hack-db-es
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
    ports:
      - "${ELASTIC_PORT}:${ELASTIC_PORT}"

volumes:
  hack-postgres-db: null
